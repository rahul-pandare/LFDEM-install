#!/usr/bin/env python
#
# binconf_info.py, part of LF_DEM
#
# Purpose: binconf_info.py is a script to read binary configurations
#          generated by LF_DEM
#
#  Romain Mari, 2014-2015

from __future__ import print_function
import tty
import sys
import termios
import clfdem_file as lf


def misuse():
    misuse_string = """
          Utilisation:
           %s conf_file_in_binary_fmt
"""
    print(misuse_string % (sys.argv[0]))
    sys.exit(1)

if len(sys.argv) < 2:
    misuse()

run_through = False
if sys.argv[1] == "-y":
    run_through = True
    filename = sys.argv[2]
else:
    filename = sys.argv[1]

config = lf.read_binary_conf_file(filename)

meta_data = config['metadata']
print("Meta data:\n")
for k in meta_data:
    print(k+":", meta_data[k])

ch = "y"
if not run_through:
    print("\nPrint full configuration (y/n)?")

    fd = sys.stdin.fileno()
    old_settings = termios.tcgetattr(fd)

    try:
        tty.setraw(sys.stdin.fileno())
        ch = sys.stdin.read(1)
    finally:
        termios.tcsetattr(fd, termios.TCSADRAIN, old_settings)

if ch != "y":
    exit(0)

positions = config['positions']
print("\nPositions:")
for pos in positions:
    print(" ".join(map(str, pos)))

if meta_data["format"] == 3:
    fixed_velocities = config['fixed_velocities']
    print("\nFixed velocities:")
    for vel in fixed_velocities:
        print(" ".join(map(str, vel)))

contacts = config['contacts']
print("\nContacts:")
for c in contacts:
    print(" ".join(map(str, c)))
